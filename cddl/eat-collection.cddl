; CDDL for draft-frost-rats-eat-collection, suitable for standalone testing

; $$EAT-CBOR-Tagged-Token /= Tagged-Collection
; $$EAT-CBOR-Untagged-Token /= TL-Collection

; NB: label is TBD, temp value used here
; TODO add makefile and substitute for TBD
Tagged-Collection =  #6.399(TL-Collection)

TL-Collection = {
    ? eat-collection-identifier,
    + all-collection-types
}

eat-collection-identifier = (
    profile-label => general-uri / general-oid
)

all-collection-types = (
    cwt-collection-entries //
    jwt-collection-entries //
    claim-set-collection-entries //
    detatched-eat-bundle-collection-entries
)

cwt-collection-entries = (
    collection-entry-label => CWT-Messages
)

jwt-collection-entries = (
    collection-entry-label => JWT-Messages
)

claim-set-collection-entries = (
    collection-entry-label => JC<json-wrapped-claims-set, 
                                 cbor-wrapped-claims-set>
)

detatched-eat-bundle-collection-entries = (
    collection-entry-label => BUNDLE-Messages
)

collection-entry-label = JC<text, int>

; required placeholders for standalone checking
CWT-Messages = bstr .cbor CWT-placeholder
JWT-Messages = "jwt-placeholder"
BUNDLE-Messages = "detached-EAT-bundle-placeholder"
CWT-placeholder = "cwt-placeholder"
general-uri = "General URI placeholder"
general-oid = "General OID placeholder"
profile-label = JC<"eat_profile", 265>
Claim-Label = JC<"text", int>
json-wrapped-claims-set="json-wrapped-claims-set-placeholder"
cbor-wrapped-claims-set="cbor-wrapped-claims-set-placeholder"
JC<J,C> = J .feature "json" / C .feature "cbor"
